# =============================================================================
# AI Data Agent - Development Environment Configuration
# =============================================================================
# This file contains all environment variables needed for development
# Copy this file to .env for local development

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# MongoDB Configuration - Use either local or Atlas cloud database
# For local MongoDB:
# MONGODB_URI=mongodb://localhost:27017/ai_data_agent
# For MongoDB Atlas (recommended for production):
MONGODB_URI=mongodb+srv://username:password@cluster.mongodb.net/ai_data_agent?retryWrites=true&w=majority
MONGODB_URL=mongodb+srv://username:password@cluster.mongodb.net/ai_data_agent?retryWrites=true&w=majority
MONGODB_DB_NAME=ai_data_agent
MONGODB_COLLECTION_NAME=structured_data

# Redis Configuration  
REDIS_URL=redis://localhost:6379
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
CACHE_TTL=3600

# =============================================================================
# AI SERVICE CONFIGURATION
# =============================================================================
# Groq API Configuration
GROQ_API_KEY=your_groq_api_key_here
GROQ_MODEL=llama-3.3-70b-versatile
AI_MODEL=llama-3.1-8b-instant

# Vector Search Configuration
VECTOR_DIMENSION=1536
SEARCH_LIMIT=50
SIMILARITY_THRESHOLD=0.7

# =============================================================================
# API CONFIGURATION
# =============================================================================
# FastAPI Configuration
API_V1_STR=/api/v1
API_HOST=0.0.0.0
API_PORT=8000
API_RELOAD=True

# Security Configuration
SECRET_KEY=your_secret_key_here_change_in_production
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# CORS Configuration
ALLOWED_ORIGINS=["http://localhost:3000","http://127.0.0.1:3000"]
ALLOWED_METHODS=["GET","POST","PUT","DELETE","OPTIONS"]
ALLOWED_HEADERS=["*"]
CORS_ORIGINS=["http://localhost:3000","http://127.0.0.1:3000"]

# =============================================================================
# FRONTEND CONFIGURATION
# =============================================================================
# React App Configuration
REACT_APP_API_BASE_URL=http://localhost:8000
REACT_APP_WS_URL=ws://localhost:8000/ws
REACT_APP_ENV=development
REACT_APP_VERSION=1.0.0

# =============================================================================
# FILE UPLOAD CONFIGURATION
# =============================================================================
MAX_UPLOAD_SIZE=10485760
UPLOAD_DIR=./uploads

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
LOG_LEVEL=DEBUG
LOG_FILE=logs/app.log
NODE_ENV=development

# =============================================================================
# SECURITY CONFIGURATION (Development)
# =============================================================================
SECURE_COOKIES=false
HTTPS_ONLY=false

# =============================================================================
# RATE LIMITING CONFIGURATION
# =============================================================================
RATE_LIMIT_REQUESTS=1000
RATE_LIMIT_WINDOW=60
RATE_LIMIT_PER_MINUTE=1000
RATE_LIMIT_PER_HOUR=10000

# =============================================================================
# HEALTH CHECK CONFIGURATION
# =============================================================================
HEALTH_CHECK_INTERVAL=30

# =============================================================================
# MONITORING CONFIGURATION (Optional for dev)
# =============================================================================
# SENTRY_DSN=your_sentry_dsn_here
ENABLE_METRICS=false

# =============================================================================
# DOCKER COMPOSE OVERRIDES (for docker-compose.yml)
# =============================================================================
# MongoDB Credentials for Docker
MONGO_ROOT_USERNAME=admin
MONGO_ROOT_PASSWORD=password123
REDIS_PASSWORD=redis123
DATABASE_NAME=ai_data_agent
DOMAIN=localhost
GRAFANA_PASSWORD=admin123